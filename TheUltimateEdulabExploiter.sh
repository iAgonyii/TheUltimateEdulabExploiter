
#!/bin/bash
which python sh
set -a; source config.sh; set +a
git clone https://github.com/dark-lbp/isf scripts/isf > /dev/null 2>&1

print_banner()
{
	echo -e "\033[1;32m****************************************************************\033[0m"
 	echo
	echo "███████╗██████╗ ██╗   ██╗██╗      █████╗ ██████╗ "
	echo "██╔════╝██╔══██╗██║   ██║██║     ██╔══██╗██╔══██╗"
	echo "█████╗  ██║  ██║██║   ██║██║     ███████║██████╔╝"
	echo "██╔══╝  ██║  ██║██║   ██║██║     ██╔══██║██╔══██╗"
	echo "███████╗██████╔╝╚██████╔╝███████╗██║  ██║██████╔╝"
	echo "╚══════╝╚═════╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═════╝ "
	echo
	echo -e "\033[0;34m****************************************************************\033[0m"
}

scan_siemens_controls()
{

	python scripts/s7scan.py
}

scan_rockwell_controls()
{
	nmap -e $interface -sU -p44818 --script enip-info $rockwell_controls
}

check_siemens_protection()
{
  python scripts/s7protection.py
}

ss_siemens_controls()
{
  python scripts/s7startstop.py
}

block_siemens_controls()
{
  python scripts/s7block.py
}

while true; do
  print_banner
  options=("Scan for Siemens controllers" "Scan for Rockwell controllers" "Check Siemens CPU protection levels" "Start/Stop Siemens controllers" "Download/Upload Siemens block data" "Quit")
  echo "Please enter your choice: "
  select opt in "${options[@]}"; do
    case $REPLY in
      1) scan_siemens_controls; break ;;
      2) scan_rockwell_controls; break ;;
      3) check_siemens_protection; break ;;
      4) ss_siemens_controls; break ;;
      5) block_siemens_controls; break ;;
      6) break 2 ;;
      *) echo "Incorrect option" >&2
    esac
  done
done

echo "Bye!"
